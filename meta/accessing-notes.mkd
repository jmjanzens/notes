# example scripts and functions to access notes

### using mdless
```bash
function md() {
    if [[ ! -z "/usr/local/bin/mdless" ]]; then
        mdless $1
    else
        echo "mdless not installed - run 'gem install mdless'"
    fi
}
# Usage:
$ md note.markdown
```

### using pandoc
```bash
alias p="pandoc -t markdown_strict $1"
# Usage:
$ p note.markdown
```

### using bash and less
```bash
###
### NOTE: this is only for *.mkd topics for the nonce.
### Should probably rewrite this in c, anyway.
###
function notes() {
    if [[ -z $1 ]]; then
        echo 'Usage:\n\t notes [OPTION] [FILE] [PATTERN]'
    elif [[ $1 =~ "-h" ]] || [[ $1 =~ "--help" ]]; then
        cat << EOF
Usage: notes [OPTION] [FILE] [PATTERN]
    [OPTION]
        -h, --help
            Show this help text.
        -l, --list
            Show the list of viewable, searchable, and editable files.
        -e, --edit
            Edit the file in place, using default editor.  Depending on the
            set by 'update-alternatives --config editor' in /usr/bin/editor
            (Debian specific), this action may also create a blank help file
            of this name, if none exists.
        -s, --subject
            Look into subject directory for topic, specific to that subject.
            Example usage: 'notes --subject linux cmds'

    [FILE]
        Any file directly within the '$HOME/notes' directory.

    [PATTERN]
        Any single word pattern, or if enclosed in single quotes, any standard
        regex expression accepted by the system's version of grep.
EOF
    elif [[ $1 =~ "-l" ]] || [[ $1 =~ "--list" ]]; then
        echo 'List of Help Files:\n------------------'
        for n in `\ls ${HOME}/notes`; do
            note=${HOME}/notes/${n}
            if [[ -d $note ]]; then
                echo $note | awk -F '.*/' '
                    /[/]/ { print "\033[34m"$2"\033[0m" }
                '
                for nn in `\ls $note`; do
                    nn=`basename $(\ls -p ${note}/${nn})`
                    echo $nn | awk -F '.mkd' '
                        /.mkd/ { print "`-"$1 }
                    '
                done
            elif [[ -e $note ]]; then
                note=`basename $(\ls -p $note)`
                echo $note | awk -F '.mkd' '
                    /.mkd/ { print $1 }
                '
            fi
        done
    elif [[ -z $2 ]]; then
        less ${HOME}/notes/${1}.mkd
    else
        if [[ $1 =~ "-e" ]] || [[ $1 =~ "--edit" ]]; then
            /usr/bin/editor ${HOME}/notes/${2}.mkd
        elif [[ $1 =~ "-s" ]] || [[ $1 =~ "--subject" ]]; then
            less ${HOME}/notes/${2}/${3}.mkd
        else
            grep -rh $HOME/notes/ --exclude-dir=".git" -e $1 | grep --color -C 10 $2
        fi
    fi
}
```
